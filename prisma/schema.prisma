// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String         @id @unique @default(uuid())
  email         String         @unique
  firstName     String
  lastName      String
  createdAt     DateTime       @default(now())
  updatedAt     DateTime       @updatedAt
  dateOfBirth   DateTime
  lastActive    DateTime       @default(now())
  password      String
  description   String?
  posts         Post[]
  Likes         Like[]
  comments      Comment[]
  notifications Notification[]
}

model Post {
  id        String    @id @unique @default(uuid())
  User      User?     @relation(fields: [authorId], references: [id])
  authorId  String?
  title     String
  body      String
  Comments  Comment[]
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  likes     Like[]
}

model Comment {
  id        String   @unique @default(uuid())
  userId    String
  postId    String
  body      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  Post      Post     @relation(fields: [postId], references: [id])
  User      User     @relation(fields: [userId], references: [id])
}

model Like {
  postId String
  userId String
  User   User   @relation(fields: [userId], references: [id])
  Post   Post   @relation(fields: [postId], references: [id])

  @@id([postId, userId])
}

model Notification {
  id        String   @unique @default(uuid())
  type      String
  read      Boolean  @default(false)
  createdAt DateTime @default(now())
  User      User     @relation(fields: [userId], references: [id])
  userId    String
  message   String

  @@index([userId])
}
